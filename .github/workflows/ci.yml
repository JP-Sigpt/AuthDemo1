name: CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    services:
      mongo:
        image: mongo:6.0
        ports: [27017:27017]
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\'ping\')'" \
          --health-interval 10s \
          --health-timeout 5s \
          --health-retries 5
    env:
      MONGO_URL: mongodb+srv://jpanimenaruto27:ZppnpHrTycxzBELE@cluster0.xnuvsfk.mongodb.net/mfa-auth-db?retryWrites=true&w=majority
      CI: true
      CHROME_BIN: /usr/bin/google-chrome
      BASE_URL: http://localhost:3001
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Cache client dependencies
        uses: actions/cache@v4
        with:
          path: client/node_modules
          key: client-deps-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            client-deps-${{ runner.os }}-${{ matrix.node-version }}-

      - name: Cache server dependencies
        uses: actions/cache@v4
        with:
          path: server/node_modules
          key: server-deps-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('server/package-lock.json') }}
          restore-keys: |
            server-deps-${{ runner.os }}-${{ matrix.node-version }}-

      - name: Install client dependencies
        run: cd client && npm ci

      - name: Install server dependencies
        run: cd server && npm ci

      - name: Lint client
        run: cd client && npm run lint

      - name: Lint server
        run: cd server && npx eslint .

      - name: Run client unit tests
        run: cd client && npm run test:unit

      - name: Run server unit tests
        run: cd server && npx jest

      - name: Build client
        run: cd client && npm run build

      - name: Upload client build artifact
        uses: actions/upload-artifact@v4
        with:
          name: client-build
          path: client/dist

      - name: Install Chrome for e2e
        uses: browser-actions/setup-chrome@v1

      - name: Run client e2e tests (Selenium)
        run: cd client && npm run test:e2e
        env:
          MONGO_URL: ${{ env.MONGO_URL }}
          BASE_URL: ${{ env.BASE_URL }}
          CHROME_BIN: ${{ env.CHROME_BIN }}
